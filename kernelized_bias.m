function [b] = kernelized_bias(optimal, predictors, classes, kernel_mode, param1, param2)  if nargin == 5    param2 = 'whatever';  endif    if nargin == 3 || (nargin == 4 && kernel_mode == 'linear')    param2 = 'whatever';    param1 = 'whatever';    kernel_mode = 'linear';  endif    [max_value, max_index] = max(optimal);    acc = 0;  for i=1:length(classes)    acc = acc + classes(i) * optimal(i) * kernel(predictors(max_index, :), predictors(i, :), kernel_mode, param1, param2);  endfor    b1 = classes(max_index) - acc;    optimal(max_index) = -Inf;  [max_value2, max_index2] = max(optimal);  optimal(max_index) = max_value;    acc = 0;  for i=1:length(classes)    acc = acc + classes(i) * optimal(i) * kernel(predictors(max_index2, :), predictors(i, :), kernel_mode, param1, param2);  endfor    b2 = classes(max_index2) - acc;    b = 1 / 2 * (b1 + b2);
endfunction
